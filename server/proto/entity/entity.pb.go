// Code generated by protoc-gen-go.
// source: proto/entity/entity.proto
// DO NOT EDIT!

/*
Package entity is a generated protocol buffer package.

It is generated from these files:
	proto/entity/entity.proto

It has these top-level messages:
	EntityLink
	Entity
	EntityListResponse
	EntityResponse
	EntityListRequest
*/
package entity

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"
import grpc_gateway_common "git.simplendi.com/FirmQ/frontend-server/server/proto/common"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EntityLink struct {
	EntityId string `protobuf:"bytes,1,opt,name=entity_id,json=entityId" json:"entity_id"`
	Amount   string `protobuf:"bytes,2,opt,name=amount" json:"amount"`
}

func (m *EntityLink) Reset()                    { *m = EntityLink{} }
func (m *EntityLink) String() string            { return proto.CompactTextString(m) }
func (*EntityLink) ProtoMessage()               {}
func (*EntityLink) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *EntityLink) GetEntityId() string {
	if m != nil {
		return m.EntityId
	}
	return ""
}

func (m *EntityLink) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

type Entity struct {
	Id                  string                       `protobuf:"bytes,1,opt,name=id" json:"id"`
	CommonName          string                       `protobuf:"bytes,2,opt,name=common_name,json=commonName" json:"common_name"`
	CompanyId           string                       `protobuf:"bytes,3,opt,name=company_id,json=companyId" json:"company_id"`
	Rev                 int64                        `protobuf:"varint,4,opt,name=rev" json:"rev"`
	Latest              bool                         `protobuf:"varint,5,opt,name=latest" json:"latest"`
	CreatedByUsername   string                       `protobuf:"bytes,6,opt,name=created_by_username,json=createdByUsername" json:"created_by_username"`
	CreatedAt           int64                        `protobuf:"varint,7,opt,name=created_at,json=createdAt" json:"created_at"`
	CreatedBy           string                       `protobuf:"bytes,8,opt,name=created_by,json=createdBy" json:"created_by"`
	Type                string                       `protobuf:"bytes,9,opt,name=type" json:"type"`
	GivenName           string                       `protobuf:"bytes,10,opt,name=given_name,json=givenName" json:"given_name"`
	MiddleName          string                       `protobuf:"bytes,11,opt,name=middle_name,json=middleName" json:"middle_name"`
	FamilyName          string                       `protobuf:"bytes,12,opt,name=family_name,json=familyName" json:"family_name"`
	NamePrefix          string                       `protobuf:"bytes,13,opt,name=name_prefix,json=namePrefix" json:"name_prefix"`
	NameSuffix          string                       `protobuf:"bytes,14,opt,name=name_suffix,json=nameSuffix" json:"name_suffix"`
	Gender              string                       `protobuf:"bytes,15,opt,name=gender" json:"gender"`
	Birthday            string                       `protobuf:"bytes,16,opt,name=birthday" json:"birthday"`
	Birthplace          string                       `protobuf:"bytes,17,opt,name=birthplace" json:"birthplace"`
	Birthcountry        string                       `protobuf:"bytes,18,opt,name=birthcountry" json:"birthcountry"`
	Nationality         string                       `protobuf:"bytes,19,opt,name=nationality" json:"nationality"`
	ResidentialAddress  *grpc_gateway_common.Address `protobuf:"bytes,20,opt,name=residential_address,json=residentialAddress" json:"residential_address"`
	Kvk                 string                       `protobuf:"bytes,21,opt,name=kvk" json:"kvk"`
	LegalForm           string                       `protobuf:"bytes,22,opt,name=legal_form,json=legalForm" json:"legal_form"`
	RegisteredName      string                       `protobuf:"bytes,23,opt,name=registered_name,json=registeredName" json:"registered_name"`
	RegisteredOffice    string                       `protobuf:"bytes,24,opt,name=registered_office,json=registeredOffice" json:"registered_office"`
	DateOfRegistration  string                       `protobuf:"bytes,25,opt,name=date_of_registration,json=dateOfRegistration" json:"date_of_registration"`
	DateOfEstablishment string                       `protobuf:"bytes,26,opt,name=date_of_establishment,json=dateOfEstablishment" json:"date_of_establishment"`
	TradeName           string                       `protobuf:"bytes,27,opt,name=trade_name,json=tradeName" json:"trade_name"`
	VisitingAddress     *grpc_gateway_common.Address `protobuf:"bytes,28,opt,name=visiting_address,json=visitingAddress" json:"visiting_address"`
	RegisteredAddress   *grpc_gateway_common.Address `protobuf:"bytes,29,opt,name=registered_address,json=registeredAddress" json:"registered_address"`
	Rsin                string                       `protobuf:"bytes,34,opt,name=rsin" json:"rsin"`
	IssuedCapital       string                       `protobuf:"bytes,35,opt,name=issued_capital,json=issuedCapital" json:"issued_capital"`
	PaidupCapital       string                       `protobuf:"bytes,36,opt,name=paidup_capital,json=paidupCapital" json:"paidup_capital"`
	IsBfi               bool                         `protobuf:"varint,37,opt,name=is_bfi,json=isBfi" json:"is_bfi"`
	BfiNumber           string                       `protobuf:"bytes,38,opt,name=bfi_number,json=bfiNumber" json:"bfi_number"`
	Directors           *EntityLink                  `protobuf:"bytes,39,opt,name=directors" json:"directors"`
	Proxyholders        *EntityLink                  `protobuf:"bytes,40,opt,name=proxyholders" json:"proxyholders"`
	Trustees            *EntityLink                  `protobuf:"bytes,41,opt,name=trustees" json:"trustees"`
	Shareholders        *EntityLink                  `protobuf:"bytes,42,opt,name=shareholders" json:"shareholders"`
}

func (m *Entity) Reset()                    { *m = Entity{} }
func (m *Entity) String() string            { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()               {}
func (*Entity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Entity) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Entity) GetCommonName() string {
	if m != nil {
		return m.CommonName
	}
	return ""
}

func (m *Entity) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

func (m *Entity) GetRev() int64 {
	if m != nil {
		return m.Rev
	}
	return 0
}

func (m *Entity) GetLatest() bool {
	if m != nil {
		return m.Latest
	}
	return false
}

func (m *Entity) GetCreatedByUsername() string {
	if m != nil {
		return m.CreatedByUsername
	}
	return ""
}

func (m *Entity) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Entity) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *Entity) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Entity) GetGivenName() string {
	if m != nil {
		return m.GivenName
	}
	return ""
}

func (m *Entity) GetMiddleName() string {
	if m != nil {
		return m.MiddleName
	}
	return ""
}

func (m *Entity) GetFamilyName() string {
	if m != nil {
		return m.FamilyName
	}
	return ""
}

func (m *Entity) GetNamePrefix() string {
	if m != nil {
		return m.NamePrefix
	}
	return ""
}

func (m *Entity) GetNameSuffix() string {
	if m != nil {
		return m.NameSuffix
	}
	return ""
}

func (m *Entity) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *Entity) GetBirthday() string {
	if m != nil {
		return m.Birthday
	}
	return ""
}

func (m *Entity) GetBirthplace() string {
	if m != nil {
		return m.Birthplace
	}
	return ""
}

func (m *Entity) GetBirthcountry() string {
	if m != nil {
		return m.Birthcountry
	}
	return ""
}

func (m *Entity) GetNationality() string {
	if m != nil {
		return m.Nationality
	}
	return ""
}

func (m *Entity) GetResidentialAddress() *grpc_gateway_common.Address {
	if m != nil {
		return m.ResidentialAddress
	}
	return nil
}

func (m *Entity) GetKvk() string {
	if m != nil {
		return m.Kvk
	}
	return ""
}

func (m *Entity) GetLegalForm() string {
	if m != nil {
		return m.LegalForm
	}
	return ""
}

func (m *Entity) GetRegisteredName() string {
	if m != nil {
		return m.RegisteredName
	}
	return ""
}

func (m *Entity) GetRegisteredOffice() string {
	if m != nil {
		return m.RegisteredOffice
	}
	return ""
}

func (m *Entity) GetDateOfRegistration() string {
	if m != nil {
		return m.DateOfRegistration
	}
	return ""
}

func (m *Entity) GetDateOfEstablishment() string {
	if m != nil {
		return m.DateOfEstablishment
	}
	return ""
}

func (m *Entity) GetTradeName() string {
	if m != nil {
		return m.TradeName
	}
	return ""
}

func (m *Entity) GetVisitingAddress() *grpc_gateway_common.Address {
	if m != nil {
		return m.VisitingAddress
	}
	return nil
}

func (m *Entity) GetRegisteredAddress() *grpc_gateway_common.Address {
	if m != nil {
		return m.RegisteredAddress
	}
	return nil
}

func (m *Entity) GetRsin() string {
	if m != nil {
		return m.Rsin
	}
	return ""
}

func (m *Entity) GetIssuedCapital() string {
	if m != nil {
		return m.IssuedCapital
	}
	return ""
}

func (m *Entity) GetPaidupCapital() string {
	if m != nil {
		return m.PaidupCapital
	}
	return ""
}

func (m *Entity) GetIsBfi() bool {
	if m != nil {
		return m.IsBfi
	}
	return false
}

func (m *Entity) GetBfiNumber() string {
	if m != nil {
		return m.BfiNumber
	}
	return ""
}

func (m *Entity) GetDirectors() *EntityLink {
	if m != nil {
		return m.Directors
	}
	return nil
}

func (m *Entity) GetProxyholders() *EntityLink {
	if m != nil {
		return m.Proxyholders
	}
	return nil
}

func (m *Entity) GetTrustees() *EntityLink {
	if m != nil {
		return m.Trustees
	}
	return nil
}

func (m *Entity) GetShareholders() *EntityLink {
	if m != nil {
		return m.Shareholders
	}
	return nil
}

type EntityListResponse struct {
	Meta *grpc_gateway_common.MetaResponse `protobuf:"bytes,1,opt,name=meta" json:"meta"`
	Data []*Entity                         `protobuf:"bytes,2,rep,name=data" json:"data"`
}

func (m *EntityListResponse) Reset()                    { *m = EntityListResponse{} }
func (m *EntityListResponse) String() string            { return proto.CompactTextString(m) }
func (*EntityListResponse) ProtoMessage()               {}
func (*EntityListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *EntityListResponse) GetMeta() *grpc_gateway_common.MetaResponse {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *EntityListResponse) GetData() []*Entity {
	if m != nil {
		return m.Data
	}
	return nil
}

type EntityResponse struct {
	Meta *grpc_gateway_common.MetaResponse `protobuf:"bytes,1,opt,name=meta" json:"meta"`
	Data *Entity                           `protobuf:"bytes,2,opt,name=data" json:"data"`
}

func (m *EntityResponse) Reset()                    { *m = EntityResponse{} }
func (m *EntityResponse) String() string            { return proto.CompactTextString(m) }
func (*EntityResponse) ProtoMessage()               {}
func (*EntityResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *EntityResponse) GetMeta() *grpc_gateway_common.MetaResponse {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *EntityResponse) GetData() *Entity {
	if m != nil {
		return m.Data
	}
	return nil
}

type EntityListRequest struct {
	Type  string `protobuf:"bytes,1,opt,name=type" json:"type"`
	Page  int64  `protobuf:"varint,2,opt,name=page" json:"page"`
	Limit int64  `protobuf:"varint,3,opt,name=limit" json:"limit"`
}

func (m *EntityListRequest) Reset()                    { *m = EntityListRequest{} }
func (m *EntityListRequest) String() string            { return proto.CompactTextString(m) }
func (*EntityListRequest) ProtoMessage()               {}
func (*EntityListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *EntityListRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *EntityListRequest) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *EntityListRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func init() {
	proto.RegisterType((*EntityLink)(nil), "grpc.gateway.entity.EntityLink")
	proto.RegisterType((*Entity)(nil), "grpc.gateway.entity.Entity")
	proto.RegisterType((*EntityListResponse)(nil), "grpc.gateway.entity.EntityListResponse")
	proto.RegisterType((*EntityResponse)(nil), "grpc.gateway.entity.EntityResponse")
	proto.RegisterType((*EntityListRequest)(nil), "grpc.gateway.entity.EntityListRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for EntityService service

type EntityServiceClient interface {
	CreateEntity(ctx context.Context, in *Entity, opts ...grpc.CallOption) (*EntityResponse, error)
	UpdateEntity(ctx context.Context, in *Entity, opts ...grpc.CallOption) (*EntityResponse, error)
	GetEntities(ctx context.Context, in *EntityListRequest, opts ...grpc.CallOption) (*EntityListResponse, error)
	GetLatestEntity(ctx context.Context, in *grpc_gateway_common.IDRequest, opts ...grpc.CallOption) (*EntityResponse, error)
	GetEntityRevisions(ctx context.Context, in *grpc_gateway_common.IDRequest, opts ...grpc.CallOption) (*EntityListResponse, error)
}

type entityServiceClient struct {
	cc *grpc.ClientConn
}

func NewEntityServiceClient(cc *grpc.ClientConn) EntityServiceClient {
	return &entityServiceClient{cc}
}

func (c *entityServiceClient) CreateEntity(ctx context.Context, in *Entity, opts ...grpc.CallOption) (*EntityResponse, error) {
	out := new(EntityResponse)
	err := grpc.Invoke(ctx, "/grpc.gateway.entity.EntityService/CreateEntity", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entityServiceClient) UpdateEntity(ctx context.Context, in *Entity, opts ...grpc.CallOption) (*EntityResponse, error) {
	out := new(EntityResponse)
	err := grpc.Invoke(ctx, "/grpc.gateway.entity.EntityService/UpdateEntity", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entityServiceClient) GetEntities(ctx context.Context, in *EntityListRequest, opts ...grpc.CallOption) (*EntityListResponse, error) {
	out := new(EntityListResponse)
	err := grpc.Invoke(ctx, "/grpc.gateway.entity.EntityService/GetEntities", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entityServiceClient) GetLatestEntity(ctx context.Context, in *grpc_gateway_common.IDRequest, opts ...grpc.CallOption) (*EntityResponse, error) {
	out := new(EntityResponse)
	err := grpc.Invoke(ctx, "/grpc.gateway.entity.EntityService/GetLatestEntity", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entityServiceClient) GetEntityRevisions(ctx context.Context, in *grpc_gateway_common.IDRequest, opts ...grpc.CallOption) (*EntityListResponse, error) {
	out := new(EntityListResponse)
	err := grpc.Invoke(ctx, "/grpc.gateway.entity.EntityService/GetEntityRevisions", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for EntityService service

type EntityServiceServer interface {
	CreateEntity(context.Context, *Entity) (*EntityResponse, error)
	UpdateEntity(context.Context, *Entity) (*EntityResponse, error)
	GetEntities(context.Context, *EntityListRequest) (*EntityListResponse, error)
	GetLatestEntity(context.Context, *grpc_gateway_common.IDRequest) (*EntityResponse, error)
	GetEntityRevisions(context.Context, *grpc_gateway_common.IDRequest) (*EntityListResponse, error)
}

func RegisterEntityServiceServer(s *grpc.Server, srv EntityServiceServer) {
	s.RegisterService(&_EntityService_serviceDesc, srv)
}

func _EntityService_CreateEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Entity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntityServiceServer).CreateEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.entity.EntityService/CreateEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntityServiceServer).CreateEntity(ctx, req.(*Entity))
	}
	return interceptor(ctx, in, info, handler)
}

func _EntityService_UpdateEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Entity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntityServiceServer).UpdateEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.entity.EntityService/UpdateEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntityServiceServer).UpdateEntity(ctx, req.(*Entity))
	}
	return interceptor(ctx, in, info, handler)
}

func _EntityService_GetEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntityListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntityServiceServer).GetEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.entity.EntityService/GetEntities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntityServiceServer).GetEntities(ctx, req.(*EntityListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EntityService_GetLatestEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(grpc_gateway_common.IDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntityServiceServer).GetLatestEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.entity.EntityService/GetLatestEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntityServiceServer).GetLatestEntity(ctx, req.(*grpc_gateway_common.IDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EntityService_GetEntityRevisions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(grpc_gateway_common.IDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntityServiceServer).GetEntityRevisions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.entity.EntityService/GetEntityRevisions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntityServiceServer).GetEntityRevisions(ctx, req.(*grpc_gateway_common.IDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EntityService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.gateway.entity.EntityService",
	HandlerType: (*EntityServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateEntity",
			Handler:    _EntityService_CreateEntity_Handler,
		},
		{
			MethodName: "UpdateEntity",
			Handler:    _EntityService_UpdateEntity_Handler,
		},
		{
			MethodName: "GetEntities",
			Handler:    _EntityService_GetEntities_Handler,
		},
		{
			MethodName: "GetLatestEntity",
			Handler:    _EntityService_GetLatestEntity_Handler,
		},
		{
			MethodName: "GetEntityRevisions",
			Handler:    _EntityService_GetEntityRevisions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/entity/entity.proto",
}

func init() { proto.RegisterFile("proto/entity/entity.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1042 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xcd, 0x6e, 0x1b, 0x37,
	0x10, 0x86, 0x2c, 0x45, 0x95, 0x46, 0xb2, 0x65, 0xd3, 0x3f, 0x61, 0x64, 0x27, 0x56, 0x95, 0x26,
	0x56, 0x53, 0x40, 0x6a, 0x5d, 0xf4, 0xd2, 0xa2, 0x07, 0xdb, 0x4d, 0x0d, 0xa3, 0xf9, 0x69, 0x37,
	0xc8, 0xa5, 0x97, 0x05, 0xa5, 0xe5, 0xca, 0x84, 0xf7, 0xaf, 0x24, 0xa5, 0x7a, 0x91, 0xf6, 0xd2,
	0x57, 0xe8, 0x4b, 0xf5, 0x58, 0xa0, 0xaf, 0xd0, 0x07, 0x29, 0x38, 0xe4, 0x4a, 0xeb, 0xc2, 0x70,
	0x74, 0xc8, 0x49, 0xe4, 0x37, 0xdf, 0xcc, 0x37, 0x33, 0x1c, 0x91, 0x0b, 0x0f, 0x32, 0x99, 0xea,
	0x74, 0xc4, 0x13, 0x2d, 0x74, 0xee, 0x7e, 0x86, 0x88, 0x91, 0xed, 0xa9, 0xcc, 0x26, 0xc3, 0x29,
	0xd3, 0xfc, 0x57, 0x96, 0x0f, 0xad, 0xa9, 0x7b, 0x30, 0x4d, 0xd3, 0x69, 0xc4, 0x47, 0x2c, 0x13,
	0x23, 0x96, 0x24, 0xa9, 0x66, 0x5a, 0xa4, 0x89, 0xb2, 0x2e, 0x5d, 0x17, 0x6d, 0x92, 0xc6, 0x71,
	0x9a, 0xb8, 0x1f, 0x6b, 0xea, 0x9f, 0x00, 0x3c, 0xc7, 0x10, 0x2f, 0x44, 0x72, 0x45, 0xf6, 0xa1,
	0x69, 0x03, 0xfa, 0x22, 0xa0, 0x95, 0x5e, 0x65, 0xd0, 0xf4, 0x1a, 0x16, 0xb8, 0x08, 0xc8, 0x1e,
	0xd4, 0x59, 0x9c, 0xce, 0x12, 0x4d, 0xd7, 0xd0, 0xe2, 0x76, 0xfd, 0xbf, 0x5b, 0x50, 0xb7, 0x31,
	0xc8, 0x06, 0xac, 0x2d, 0x1c, 0xd7, 0x44, 0x40, 0x0e, 0xa1, 0x65, 0xd5, 0xfc, 0x84, 0xc5, 0xdc,
	0xf9, 0x81, 0x85, 0x5e, 0xb1, 0x98, 0x93, 0x87, 0x60, 0x76, 0x19, 0x4b, 0x50, 0xb1, 0x8a, 0xf6,
	0xa6, 0x43, 0x2e, 0x02, 0xb2, 0x09, 0x55, 0xc9, 0xe7, 0xb4, 0xd6, 0xab, 0x0c, 0xaa, 0x9e, 0x59,
	0x9a, 0x24, 0x22, 0xa6, 0xb9, 0xd2, 0xf4, 0x5e, 0xaf, 0x32, 0x68, 0x78, 0x6e, 0x47, 0x86, 0xb0,
	0x3d, 0x91, 0x9c, 0x69, 0x1e, 0xf8, 0xe3, 0xdc, 0x9f, 0x29, 0x2e, 0x51, 0xb1, 0x8e, 0x11, 0xb7,
	0x9c, 0xe9, 0x34, 0x7f, 0xeb, 0x0c, 0x28, 0xec, 0xf8, 0x4c, 0xd3, 0x8f, 0x50, 0xa0, 0xe9, 0x90,
	0x13, 0x5d, 0x36, 0x8f, 0x73, 0xda, 0x70, 0x79, 0x15, 0x51, 0x08, 0x81, 0x9a, 0xce, 0x33, 0x4e,
	0x9b, 0x68, 0xc0, 0xb5, 0x71, 0x99, 0x8a, 0x39, 0x77, 0xa5, 0x82, 0x75, 0x41, 0x04, 0x2b, 0x3d,
	0x84, 0x56, 0x2c, 0x82, 0x20, 0xe2, 0xd6, 0xde, 0xb2, 0xad, 0xb0, 0x50, 0x41, 0x08, 0x59, 0x2c,
	0xa2, 0xdc, 0x12, 0xda, 0x96, 0x60, 0xa1, 0x82, 0x60, 0x2c, 0x7e, 0x26, 0x79, 0x28, 0xae, 0xe9,
	0xba, 0x25, 0x18, 0xe8, 0x47, 0x44, 0x16, 0x04, 0x35, 0x0b, 0x0d, 0x61, 0x63, 0x49, 0x78, 0x83,
	0x88, 0x69, 0xde, 0x94, 0x27, 0x01, 0x97, 0xb4, 0x63, 0x4f, 0xd0, 0xee, 0x48, 0x17, 0x1a, 0x63,
	0x21, 0xf5, 0x65, 0xc0, 0x72, 0xba, 0x69, 0x4f, 0xbd, 0xd8, 0x93, 0x47, 0x00, 0xb8, 0xce, 0x22,
	0x36, 0xe1, 0x74, 0xcb, 0xc6, 0x5c, 0x22, 0xa4, 0x0f, 0x6d, 0xdc, 0x4d, 0xcc, 0x2c, 0xc8, 0x9c,
	0x12, 0x64, 0xdc, 0xc0, 0x48, 0xcf, 0x24, 0x66, 0x06, 0x92, 0x45, 0x42, 0xe7, 0x74, 0x1b, 0x29,
	0x65, 0x88, 0xbc, 0x84, 0x6d, 0xc9, 0x95, 0x08, 0xcc, 0xb0, 0xb1, 0xc8, 0x67, 0x41, 0x20, 0xb9,
	0x52, 0x74, 0xa7, 0x57, 0x19, 0xb4, 0x8e, 0x0f, 0x86, 0x37, 0x46, 0xde, 0xcd, 0xef, 0x89, 0xe5,
	0x78, 0xa4, 0xe4, 0xe8, 0x30, 0x33, 0x37, 0x57, 0xf3, 0x2b, 0xba, 0x8b, 0x42, 0x66, 0x69, 0x4e,
	0x27, 0xe2, 0x53, 0x16, 0xf9, 0x61, 0x2a, 0x63, 0xba, 0x67, 0x4f, 0x07, 0x91, 0xef, 0x53, 0x19,
	0x93, 0x23, 0xe8, 0x48, 0x3e, 0x15, 0x4a, 0x73, 0xc9, 0x03, 0x7b, 0x00, 0xf7, 0x91, 0xb3, 0xb1,
	0x84, 0xf1, 0x10, 0x3e, 0x83, 0xad, 0x12, 0x31, 0x0d, 0x43, 0x31, 0xe1, 0x94, 0x22, 0x75, 0x73,
	0x69, 0x78, 0x8d, 0x38, 0xf9, 0x1c, 0x76, 0x02, 0xa6, 0xb9, 0x9f, 0x86, 0xbe, 0xb5, 0x49, 0x2c,
	0x99, 0x3e, 0x40, 0x3e, 0x31, 0xb6, 0xd7, 0xa1, 0x57, 0xb2, 0x90, 0x63, 0xd8, 0x2d, 0x3c, 0xb8,
	0xd2, 0x6c, 0x1c, 0x09, 0x75, 0x19, 0xf3, 0x44, 0xd3, 0x2e, 0xba, 0x6c, 0x5b, 0x97, 0xe7, 0x65,
	0x93, 0x29, 0x4d, 0x4b, 0x16, 0xb8, 0xc1, 0xda, 0xb7, 0xa5, 0x21, 0x82, 0x19, 0x9f, 0xc3, 0xe6,
	0x5c, 0x28, 0xa1, 0x45, 0x32, 0x5d, 0xf4, 0xf5, 0x60, 0x85, 0xbe, 0x76, 0x0a, 0xaf, 0xa2, 0xa9,
	0x3f, 0x00, 0x29, 0x95, 0x5e, 0x84, 0x7a, 0xb8, 0x42, 0xa8, 0x52, 0xcb, 0x8a, 0x60, 0x04, 0x6a,
	0x52, 0x89, 0x84, 0xf6, 0xed, 0x3f, 0xc8, 0xac, 0xc9, 0x13, 0xd8, 0x10, 0x4a, 0xcd, 0x78, 0xe0,
	0x4f, 0x58, 0x26, 0x34, 0x8b, 0xe8, 0x63, 0xb4, 0xae, 0x5b, 0xf4, 0xcc, 0x82, 0x86, 0x96, 0x31,
	0x11, 0xcc, 0xb2, 0x05, 0xed, 0x13, 0x4b, 0xb3, 0x68, 0x41, 0xdb, 0x85, 0xba, 0x50, 0xfe, 0x38,
	0x14, 0xf4, 0x09, 0xde, 0x14, 0xf7, 0x84, 0x3a, 0x0d, 0x85, 0xe9, 0xd6, 0x38, 0x14, 0x7e, 0x32,
	0x8b, 0xc7, 0x5c, 0xd2, 0xa7, 0xb6, 0x5b, 0xe3, 0x50, 0xbc, 0x42, 0x80, 0x7c, 0x0b, 0xcd, 0x40,
	0x48, 0x3e, 0xd1, 0xa9, 0x54, 0xf4, 0x08, 0x6b, 0x3b, 0x1c, 0xde, 0x72, 0xe3, 0x0e, 0x97, 0xb7,
	0xa6, 0xb7, 0xf4, 0x20, 0x67, 0xd0, 0xce, 0x64, 0x7a, 0x9d, 0x5f, 0xa6, 0x51, 0xc0, 0xa5, 0xa2,
	0x83, 0xd5, 0x22, 0xdc, 0x70, 0x22, 0xdf, 0x40, 0x43, 0xcb, 0x99, 0xd2, 0x9c, 0x2b, 0xfa, 0xe9,
	0x6a, 0x01, 0x16, 0x0e, 0x26, 0x03, 0x75, 0xc9, 0x24, 0x2f, 0x32, 0x78, 0xb6, 0x62, 0x06, 0x65,
	0xa7, 0xfe, 0x6f, 0x40, 0x0a, 0x9b, 0xd2, 0x1e, 0x57, 0x59, 0x9a, 0x28, 0x4e, 0xbe, 0x82, 0x5a,
	0xcc, 0x35, 0xc3, 0xfb, 0xbd, 0x75, 0xfc, 0xf1, 0xad, 0x47, 0xfe, 0x92, 0x6b, 0x56, 0x38, 0x78,
	0x48, 0x27, 0x23, 0xa8, 0x05, 0x4c, 0x33, 0xba, 0xd6, 0xab, 0x0e, 0x5a, 0xc7, 0xfb, 0x77, 0x64,
	0xe2, 0x21, 0xb1, 0x7f, 0x0d, 0x1b, 0x6e, 0xff, 0xc1, 0x94, 0x2b, 0xab, 0x29, 0xff, 0x04, 0x5b,
	0xe5, 0xba, 0x7f, 0x99, 0x99, 0xa7, 0xa5, 0xb8, 0xec, 0x2b, 0xa5, 0xcb, 0x9e, 0x40, 0x2d, 0x63,
	0x53, 0xfb, 0xa2, 0x55, 0x3d, 0x5c, 0x93, 0x1d, 0xb8, 0x17, 0x89, 0x58, 0x68, 0x7c, 0xc6, 0xaa,
	0x9e, 0xdd, 0x1c, 0xff, 0x55, 0x83, 0x75, 0x1b, 0xf3, 0x0d, 0x97, 0x73, 0x73, 0x2b, 0x4c, 0xa1,
	0x7d, 0x86, 0x2f, 0x89, 0x7b, 0x34, 0xef, 0xca, 0xab, 0xfb, 0xf8, 0xae, 0xa4, 0x5d, 0xb5, 0xfd,
	0xdd, 0x3f, 0xfe, 0xf9, 0xf7, 0xcf, 0xb5, 0x4e, 0x1f, 0x46, 0xf3, 0x2f, 0xdc, 0xc7, 0xc2, 0xd7,
	0x95, 0x67, 0x24, 0x82, 0xf6, 0xdb, 0x2c, 0xf8, 0x90, 0x42, 0x5d, 0x14, 0xda, 0xe9, 0x77, 0x96,
	0x42, 0xa3, 0x77, 0x22, 0xf8, 0xdd, 0xa8, 0x49, 0x68, 0x9d, 0x73, 0x8d, 0x0e, 0x82, 0x2b, 0xf2,
	0xf4, 0xce, 0x89, 0x5b, 0x74, 0xb7, 0x7b, 0xf4, 0x5e, 0x9e, 0xd3, 0x26, 0xa8, 0xdd, 0x26, 0xa5,
	0x22, 0x49, 0x0a, 0x9d, 0x73, 0xae, 0x5f, 0xe0, 0x27, 0x80, 0x2b, 0xf2, 0xd1, 0xad, 0xc3, 0x71,
	0xf1, 0x5d, 0xa1, 0xb7, 0x52, 0x9d, 0xf7, 0x51, 0x6b, 0x8b, 0xfc, 0xbf, 0x4e, 0xf2, 0x0e, 0x48,
	0x51, 0x64, 0xee, 0x71, 0x73, 0x43, 0xa6, 0x89, 0x7a, 0xaf, 0xe6, 0xca, 0x35, 0x1e, 0xa0, 0xee,
	0x1e, 0xd9, 0x59, 0xea, 0xfa, 0x92, 0xcf, 0x15, 0x8a, 0x9f, 0x36, 0x7e, 0xae, 0x5b, 0x6c, 0x5c,
	0xc7, 0x8f, 0xb7, 0x2f, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xe1, 0x72, 0xee, 0xdf, 0x27, 0x0a,
	0x00, 0x00,
}
